"""upload table

Revision ID: 3a87b265896c
Revises: 
Create Date: 2019-03-06 20:52:33.334394

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '3a87b265896c'
down_revision = None
branch_labels = None
depends_on = None

from alembic import context

def check_is_sqlite():
    """Returns if the alembic context is being run in for a sqlite db"""
    databaseUri = context.config.get_main_option('sqlalchemy.url')
    return databaseUri.startswith('sqlite')

ADDITIONAL_ARGS = {
        'schema': 'construction_projects'
    }


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if check_is_sqlite():
        ADDITIONAL_ARGS.pop('schema')
    else:
        op.create_schema(ADDITIONAL_ARGS['schema'])

    op.create_table('upload',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filepath', sa.String(), nullable=True),
    sa.Column('ts_uploaded', sa.DateTime(), nullable=False, server_default=sa.func.now()),
    sa.Column('source_filename', sa.String, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filepath'),
    **ADDITIONAL_ARGS
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if check_is_sqlite():
        op.drop_table('upload')
    else:
       op.drop_schema(ADDITIONAL_ARGS['schema'], cascade=True)
    # ### end Alembic commands ###
